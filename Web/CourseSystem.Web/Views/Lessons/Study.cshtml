@{
    ViewData["Title"] = "Study";
}

@model CourseSystem.Web.ViewModels.Segments.StudySegmentsViewModel

<link href="~/css/lesson.css" rel="stylesheet" />
<div class="wrapper">
    @foreach (var segment in Model.Segments)
    {
        <div class="lesson" id="@segment.PlaceInLessonOrder">
            <h2 class="lesson-header">@Model.Name</h2>
            <section class="lesson-body">
                @if (segment.Discriminator == "ContentSegment")
                {
                    @Html.Raw(segment.SanitizedContent);
                }
                else if (segment.Discriminator == "TestSegment")
                {
                    //<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
                    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
                    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
                    <link href="~/css/test.css" rel="stylesheet" />
                    <!------ Include the above in your HEAD tag ---------->

                    <div class="container-fluid bg-info">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3><span class="label label-warning" id="qid"></span>@segment.Question</h3>
                                </div>
                                <div class="modal-body">
                                    <div class="quiz @segment.Question" id="quiz" data-toggle="buttons">
                                        <button onclick="clicked(this)" class="blockThis element-animation1 btn btn-lg btn-primary btn-block" style="margin-top:0.5em;">@segment.WrongAnswer1</button>
                                        <button onclick="clicked(this)" class="blockThis element-animation1 btn btn-lg btn-primary btn-block" style="margin-top:0.5em;">@segment.WrongAnswer2</button>
                                        <button onclick="clicked(this)" id="correct" class="blockThis element-animation1 btn btn-lg btn-primary btn-block" style="margin-top:0.5em;">@segment.CorrectAnswer</button>
                                        <button onclick="clicked(this)" class="blockThis element-animation1 btn btn-lg btn-primary btn-block" style="margin-top:0.5em;">@segment.WrongAnswer3</button>
                                    </div>
                                </div>
                                <div class="modal-footer text-muted">
                                    <span class="answer">Waiting...</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </section>
            @if (segment.PlaceInLessonOrder + 1 <= Model.Segments.Count())
            {
                <a class="btn btn-primary btn-lg" role="button" onclick="showOne(@segment.PlaceInLessonOrder+1)">Next</a>
            }
            else
            {
                <a id="finishButton" class="finishButton btn btn-primary btn-lg" role="button" asp-action="Study" asp-controller="Courses" asp-route-courseId="@Model.CourseId">Finish</a>
            }
        </div>
        <script>
            function clicked(clicked) {
                var answer = document.getElementsByClassName('answer');

                if (clicked.id == 'correct') {
                    console.log('correct');
                    for (var i = 0; i < answer.length; i++) {
                        answer[i].innerHTML = 'Correct';
                        answer[i].style.color = '#00FF00';
                    }
                    correctAnswers++;
                }
                else {
                    console.log('incorrect');
                    for (var i = 0; i < answer.length; i++) {
                        answer[i].innerHTML = 'Incorrect';
                        answer[i].style.color = '#FF0000';
                    }
                    wrongAnswers++;
                }
                blockButtons();
                if ($('#@Model.Segments.Count()').is(':visible')) {
                    setTimeout(function () {
                        if (wrongAnswers >= correctAnswers) {
                            if (window.confirm('Do you want to retake this lesson?')) {
                                console.log('point');
                                showOne('1');
                                wrongAnswers = 0;
                                correctAnswers = 0;
                                showOne('1');
                            }
                            else {
                                alert('Lesson Completed!');
                            }
                        }
                        else {
                            alert('Lesson Completed!');
                        }
                    }, 2000);
                }
                else {
                    setTimeout(function () {
                        showOne(@segment.PlaceInLessonOrder + 1)
                        for (var i = 0; i < answer.length; i++) {
                            answer[i].innerHTML = 'Waiting...';
                            answer[i].style.color = '#6c757d';
                        }
                    }, 2000);
                }
            }
        </script>
        <script>
            function Randomize() {
                var question = '@segment.Question';
                if (question != '') {
                    var list = document.getElementsByClassName('@segment.Question')[0];
                    for (var i = list.children.length; i >= 0; i--) {
                        list.appendChild(list.children[Math.random() * i | 0]);
                    }
                }
            }
            Randomize();
        </script>
    }
</div>

<script>
    var wrongAnswers = 0;
    var correctAnswers = 0;
    window.onload = function () {
        start();
    };
    function start() {
        $('.lesson').hide();
        $('#1').show();
    }
    function showOne(id) {
        $('.lesson').hide();
        $('#' + id).show();
        unblockButtons();
        console.log('showing ' + id);
    }
</script>

<script>
    function blockButtons() {
        var buttons = document.getElementsByClassName('blockThis');
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].disabled = true;
        }
    }

    function unblockButtons() {
        var buttons = document.getElementsByClassName('blockThis');
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].disabled = false;
        }
    }
</script>